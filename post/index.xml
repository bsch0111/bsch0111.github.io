<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on </title>
    <link>https://bsch0111.github.io/post/</link>
    <description>Recent content in Posts on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Sun, 03 Jan 2021 23:39:36 +0900</lastBuildDate><atom:link href="https://bsch0111.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Googlesheet_github01</title>
      <link>https://bsch0111.github.io/post/googlesheet_github01/</link>
      <pubDate>Sun, 03 Jan 2021 23:39:36 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/googlesheet_github01/</guid>
      <description>google Sheet에 Github Repo 정보 가져오기  Import GitHub Data to Google Sheets 의 글을 따라 시도해보았습니다.</description>
    </item>
    
    <item>
      <title>선형대수기초용어</title>
      <link>https://bsch0111.github.io/post/%EC%84%A0%ED%98%95%EB%8C%80%EC%88%98%EA%B8%B0%EC%B4%88%EC%9A%A9%EC%96%B4/</link>
      <pubDate>Mon, 21 Dec 2020 22:22:40 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/%EC%84%A0%ED%98%95%EB%8C%80%EC%88%98%EA%B8%B0%EC%B4%88%EC%9A%A9%EC%96%B4/</guid>
      <description>선형대수 기초용어 분산
 하나의 데이터가 퍼져있는 정도 제곱이 있기 때문에 데이터의 스케일(크기)에 효과를 많이음    좋다는 것이 아님, 크기 변화에 민감할 수 있음 표준편차     분산의 스케일을 보정하기 위해 루트를 씌워서 크기변화를 줄이고자하는 방법  공분산(공통된 분산)</description>
    </item>
    
    <item>
      <title>2020/12/21_TIL</title>
      <link>https://bsch0111.github.io/post/%EC%84%A0%ED%98%95%EB%8C%80%EC%88%98%EC%A0%91%EA%B7%BC/</link>
      <pubDate>Mon, 21 Dec 2020 22:21:14 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/%EC%84%A0%ED%98%95%EB%8C%80%EC%88%98%EC%A0%91%EA%B7%BC/</guid>
      <description>선형대수  인간이 파악할 수 있는 제일 확실한 구조 인풋 변수가 여러개가 있고, 아웃풋 변수가 여러개가 있는 상황을 가정 인풋 변수와 아웃풋 변수가 선형적인 관계로만 이루어져 있다고 가졍 -&amp;gt; 행렬 (Matrix)  질문 : 도커에서도 이와같은 웜업 자료가 있으면 좋을 듯함 질문 : 대부분의 질문은 받을 수 있지만 안받는건 어떨지 물어봅니다!</description>
    </item>
    
    <item>
      <title>Private형에접근</title>
      <link>https://bsch0111.github.io/post/private%ED%98%95%EC%97%90%EC%A0%91%EA%B7%BC/</link>
      <pubDate>Mon, 21 Dec 2020 22:20:13 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/private%ED%98%95%EC%97%90%EC%A0%91%EA%B7%BC/</guid>
      <description>private 형에 접근 : __로 선언되어있는 private 형 같은 경우 외부 import 되어있으면 접근할 수 없다.</description>
    </item>
    
    <item>
      <title>Protected Getter, Setter 사용</title>
      <link>https://bsch0111.github.io/post/protected_getter/</link>
      <pubDate>Mon, 21 Dec 2020 22:19:19 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/protected_getter/</guid>
      <description>Protected Getter, Setter 사용 class Car: def __init__(self, car_name, car_color ): self.</description>
    </item>
    
    <item>
      <title>Duck_typer과 매직 메소드와 private형 변수 접근</title>
      <link>https://bsch0111.github.io/post/duck_type_magicmethod/</link>
      <pubDate>Mon, 21 Dec 2020 22:18:09 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/duck_type_magicmethod/</guid>
      <description>클래스 생성시 필요한 부분 Duck Typing  객체의 상속을 이용하지 않고, 해당 기능을 하는 method가 있는지만을 파악하는것 만약 어떤 새가 오리처럼 걷고, 헤엄치고, 꽥꽥거리는 소리를 낸다면 나는 그 새를 오리라고 부를 것이다.</description>
    </item>
    
    <item>
      <title>2020/12/18_TIL</title>
      <link>https://bsch0111.github.io/post/confidnece_interval/</link>
      <pubDate>Mon, 21 Dec 2020 22:16:14 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/confidnece_interval/</guid>
      <description>Confidence Interval CLT (중심 극한 이론)
표준오차
 10000명 중에서 50명을 뽑아서 조사하는데 어떤 50명을 뽑는지에 따라서 평균값이 달라질 것이다.</description>
    </item>
    
    <item>
      <title>상속과추상화</title>
      <link>https://bsch0111.github.io/post/%EC%83%81%EC%86%8D%EA%B3%BC%EC%B6%94%EC%83%81%ED%99%94/</link>
      <pubDate>Sat, 19 Dec 2020 23:15:18 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/%EC%83%81%EC%86%8D%EA%B3%BC%EC%B6%94%EC%83%81%ED%99%94/</guid>
      <description>#상속
클래스 관계에는 : 상속관계와 포함 관계가 있다. 포함관계는 멤버변수에 다른 클래스 변수를 넣어서 사용하는 것이고, 호출될때는 포함관계에 있는 함수가 제일 먼저 호출된다.</description>
    </item>
    
    <item>
      <title>==와is의차이</title>
      <link>https://bsch0111.github.io/post/%EC%99%80is%EC%9D%98%EC%B0%A8%EC%9D%B4/</link>
      <pubDate>Sat, 19 Dec 2020 23:14:20 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/%EC%99%80is%EC%9D%98%EC%B0%A8%EC%9D%B4/</guid>
      <description>== : 값을 비교 is : 레퍼런스(참조) 비교
1000 == 10 ** 3 True 1000 is 10 ** 3 False </description>
    </item>
    
    <item>
      <title>조금더가설검정</title>
      <link>https://bsch0111.github.io/post/%EC%A1%B0%EA%B8%88%EB%8D%94%EA%B0%80%EC%84%A4%EA%B2%80%EC%A0%95/</link>
      <pubDate>Sat, 19 Dec 2020 23:13:07 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/%EC%A1%B0%EA%B8%88%EB%8D%94%EA%B0%80%EC%84%A4%EA%B2%80%EC%A0%95/</guid>
      <description>t- test 이외에 다른 가설검정을 배워본다.
 독립성 : 두 그룹이 서로 독립적인 것이여야만 한다 정규성 : 가설 검정을 하려는 데이터가 정규분포와 일치하는지 등분산성 : 비교하고자하는 그룹간에 유사한 수준의 분산을 가지는지 (스케일이 비슷한지)  정규 분포가 아니고 많은 분포가 있을 수 있다.</description>
    </item>
    
    <item>
      <title>가설검정</title>
      <link>https://bsch0111.github.io/post/%EA%B0%80%EC%84%A4%EA%B2%80%EC%A0%95/</link>
      <pubDate>Sat, 19 Dec 2020 23:12:08 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/%EA%B0%80%EC%84%A4%EA%B2%80%EC%A0%95/</guid>
      <description>가설 검증 어떤 문제를 해결하는 방법 A가 있을 때 단순히 A로 해결한 사람들의 평균 속도, A를 사용하지 않고 문제를 해결한 사람들의 평균 속도를 비교하는 것은 기술 통계학 모집단에서 20명 정도의 표본을 대상으로 실험을 한 후 ‘모집단’이 해당 A를 적용했을때도 효과가 있는 것인가를 검증하는 것이 추리 통계학이라고 한다.</description>
    </item>
    
    <item>
      <title>CLT</title>
      <link>https://bsch0111.github.io/post/clt/</link>
      <pubDate>Sat, 19 Dec 2020 23:10:52 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/clt/</guid>
      <description>CLT (중심 극한 이론)
표준오차
 10000명 중에서 50명을 뽑아서 조사하는데 어떤 50명을 뽑는지에 따라서 평균값이 달라질 것이다.</description>
    </item>
    
    <item>
      <title>어려운통계</title>
      <link>https://bsch0111.github.io/post/%EC%96%B4%EB%A0%A4%EC%9A%B4%ED%86%B5%EA%B3%84/</link>
      <pubDate>Sat, 19 Dec 2020 23:09:37 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/%EC%96%B4%EB%A0%A4%EC%9A%B4%ED%86%B5%EA%B3%84/</guid>
      <description>통계학이 어려웠던점
   강의를 여러개 보면서 용어가 서로 혼동 되었다.</description>
    </item>
    
    <item>
      <title>가정 설정문(Assert) </title>
      <link>https://bsch0111.github.io/post/assert/</link>
      <pubDate>Thu, 17 Dec 2020 01:56:58 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/assert/</guid>
      <description>가정 설정문(assert)  assert는 뒤의 조건이 True 가 아니면 AssertError 를 발생 assert condition ‘message’로 구성 message는 AssertionError 와 같이 출력  a = 3 assert a == 3 , ‘a는 3이 아니다’ assert a == 5 , ‘a는 5가 아니다’ 2 a = 3 3 assert a == 3 , &amp;#39;a는 3이 아니다&amp;#39; ----&amp;gt; 4 assert a == 5 , &amp;#39;a는 5가 아니다&amp;#39; AssertionError: a는 5가 아니다 </description>
    </item>
    
    <item>
      <title>2020/12/16_TIL</title>
      <link>https://bsch0111.github.io/post/2020_12_16_til/</link>
      <pubDate>Thu, 17 Dec 2020 01:55:31 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/2020_12_16_til/</guid>
      <description>새롭게 알게된것  리스트 컴프리헨션은 , [1)변수 2)반복문 3)조건문] 으로 구성되어있다.</description>
    </item>
    
    <item>
      <title>인덱싱과 슬라이스</title>
      <link>https://bsch0111.github.io/post/python_indexing/</link>
      <pubDate>Tue, 15 Dec 2020 20:59:54 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/python_indexing/</guid>
      <description>인덱서와 슬라이스 슬라이스 python 에서는 연속되는 여러개의 요소를 가진 자료형을 시퀀스 자료형(Sequence Types)이라고 한다.</description>
    </item>
    
    <item>
      <title>python 클래스를 정의할 때 object를 붙이는 것</title>
      <link>https://bsch0111.github.io/post/python_class_object/</link>
      <pubDate>Sun, 13 Dec 2020 22:15:31 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/python_class_object/</guid>
      <description>python 클래스를 정의할 때 object를 붙이는 것 참고 :https://hashcode.co.kr/questions/487/object%EB%8A%94-%EC%99%9C-%EC%83%81%EC%86%8D%EB%B0%9B%EB%8A%94-%EA%B1%B4%EA%B0%80%EC%9A%94
# python 3.</description>
    </item>
    
    <item>
      <title>pandas 결측값</title>
      <link>https://bsch0111.github.io/post/python_null/</link>
      <pubDate>Sat, 12 Dec 2020 00:35:18 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/python_null/</guid>
      <description>pandas 결측값 참고 : https://m.blog.naver.com/youji4ever/221791455668
결측값 종류(https://purplechip.tistory.com/5)   None : Python 코드에서 누락된 데이터에 자주 사용되는 Python singleton 객체 (NULL이며 object 타입에 속함)</description>
    </item>
    
    <item>
      <title>나의 현재 수준과 앞으로 하고 싶은 내용..</title>
      <link>https://bsch0111.github.io/post/sometings_that_i_want/</link>
      <pubDate>Fri, 11 Dec 2020 00:30:19 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/sometings_that_i_want/</guid>
      <description>현재 상태 데이터 엔지니어가 되고 싶다.
지금은 거의 모른다고 말할 수 있을거 같다.</description>
    </item>
    
    <item>
      <title>인스턴스 메소드, 정적 메소드, 클래스 메서드</title>
      <link>https://bsch0111.github.io/post/python_methods/</link>
      <pubDate>Tue, 08 Dec 2020 02:17:16 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/python_methods/</guid>
      <description>인스턴스 메소드, 정적 메소드, 클래스 메서드 참고 : http://pythonstudy.xyz/python/article/19-%ED%81%B4%EB%9E%98%EC%8A%A4
 인스턴스 메소드 : 인스턴스 필드를 self 를 통해 접근할 수 있음 정적 메서드 : self 파라미터를 갖지 않고, 인스턴스 변수에 엑세스 할 수 없다.</description>
    </item>
    
    <item>
      <title>Python class 변수 , 인스턴스 변수</title>
      <link>https://bsch0111.github.io/post/python_variables/</link>
      <pubDate>Tue, 08 Dec 2020 02:15:47 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/python_variables/</guid>
      <description>class 변수 , 인스턴스 변수 참고 : http://pythonstudy.xyz/python/article/19-%ED%81%B4%EB%9E%98%EC%8A%A4
class Rectangle: count = 0 # 클래스 변수 # 초기자(initializer) def __init__(self, width, height): # self.</description>
    </item>
    
    <item>
      <title>python 클래스 인스턴스를 생성할 때 함수(init,new) 호출 순서 </title>
      <link>https://bsch0111.github.io/post/python_init_new/</link>
      <pubDate>Tue, 08 Dec 2020 02:14:02 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/python_init_new/</guid>
      <description>python 클래스 인스턴스를 생성할 때 함수 호출 순서 참고 : https://wikidocs.</description>
    </item>
    
    <item>
      <title>breakpoint 로 디버깅하기</title>
      <link>https://bsch0111.github.io/post/python-dubuggin/</link>
      <pubDate>Mon, 07 Dec 2020 00:14:34 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/python-dubuggin/</guid>
      <description>breakpoint 로 디버깅하기  참고 : https://www.askpython.com/python/built-in-methods/python-breakpoint-function 디버깅(debugging)은 프로그램이 정상 작동할 수 있도록 잠재적 ‘버그’를 제고하는 행위 파이썬에서는 pdb라는 파이썬 표준 라이브러리 모듈을 사용함 예시  import pdb a = None for i in range(10) : if i == 4 : a = &amp;#39;Hi&amp;#39; print(&amp;#39;a is set to&amp;#39;, a ) elif i == 5: pdb.</description>
    </item>
    
    <item>
      <title>Python package란</title>
      <link>https://bsch0111.github.io/post/python_package/</link>
      <pubDate>Sun, 06 Dec 2020 15:14:50 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/python_package/</guid>
      <description>Python Package란  참고 : https://docs.python.org/3/tutorial/modules.html#packages “dotted module names”을 이용해서 Python의 모듈을 구조화하는 방법 예를 들어 A.</description>
    </item>
    
    <item>
      <title>test_pypl에 패키지 배포하기</title>
      <link>https://bsch0111.github.io/post/deploy_python_to_test_pypl/</link>
      <pubDate>Sun, 06 Dec 2020 15:12:00 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/deploy_python_to_test_pypl/</guid>
      <description>2020/12/05 5. test pypl 에 패키지 배포
test pypl 에 패키지 배포 과정  PyPI : Python Package Index (PyPI) 1 우선 package 를 만들고, 배포가 가능하도록 README.</description>
    </item>
    
    <item>
      <title> __main__ : python 모듈 호출 시 전역에 선언된 함수 수행 문제해결방법</title>
      <link>https://bsch0111.github.io/post/python_global/</link>
      <pubDate>Sun, 06 Dec 2020 03:08:28 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/python_global/</guid>
      <description>python 모듈 호출 시 전역에 선언된 함수 실행 python 모듈을 호출 했을 때 전역으로 선언되어 있는 함수, 및 변수를 수행한다.</description>
    </item>
    
    <item>
      <title>hugo anatole 테마 만지기</title>
      <link>https://bsch0111.github.io/post/blog_tab_resize/</link>
      <pubDate>Sat, 05 Dec 2020 01:47:19 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/blog_tab_resize/</guid>
      <description>hugo anatole 테마 만지기  hugo anatole 테마 기본은 옆의 탭이 너무 길다.</description>
    </item>
    
    <item>
      <title>부모 레포지토리와 submodule 레포지토리의 포인트가 달라서 생기는 문제</title>
      <link>https://bsch0111.github.io/post/branch_detach/</link>
      <pubDate>Sat, 05 Dec 2020 01:28:20 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/branch_detach/</guid>
      <description>부모 레포지토리와 submodule 레포지토리의 포인트가 달라서 생기는 문제  git log 커밋 포인터 중에서 HEAD 와 origin/main 이 다른 것을 확인할 수 있다  commit 81e8e894f15f76aa85ba72846f125b33007c7a30 (HEAD) Author: bsch0111 &amp;lt;bsch0111@naver.</description>
    </item>
    
    <item>
      <title>Clone 할 레포지토리가 submodule을 포함하고 있을 떄</title>
      <link>https://bsch0111.github.io/post/problem-when-repository-has-submodule/</link>
      <pubDate>Fri, 04 Dec 2020 23:55:06 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/problem-when-repository-has-submodule/</guid>
      <description>Clone 할 레포지토리가 submodule을 포함하고 있을 떄 문제점  이전에 로컬 저장소에서 push 할 때 하나의 저장소 밑에 하나의 저장소가 submodule로 되어 있음  궁금증  다시 클론해서 가져올 때 submodule 이 지정되어 있는가?</description>
    </item>
    
    <item>
      <title>GIT에 대한 궁금증</title>
      <link>https://bsch0111.github.io/post/github/</link>
      <pubDate>Fri, 04 Dec 2020 14:05:11 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/github/</guid>
      <description>GIT에 대한 궁금증  Github와 Git의 차이 &amp;amp; .git 폴더가 어떤 일을 하는지  git의 발전방향</description>
    </item>
    
    <item>
      <title>초기 맥북 개발환경 구성</title>
      <link>https://bsch0111.github.io/post/development-setting/</link>
      <pubDate>Fri, 04 Dec 2020 01:14:14 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/development-setting/</guid>
      <description>초기 맥북 개발환경 구성  언어 : Python 쉘 : Fish Shell Python 가상환경 : anaconda 패키지 설치 프로그램 :brew, cask 에디터 : vscose 터미널 : iterm2  쉘 Fish Shell &amp;ldquo;I hate configuration, and combing hundreds of git repos for bashfiles and find what works for me&amp;rdquo; : 참고한 블로그 글</description>
    </item>
    
    <item>
      <title>PYTHON과 객체지향프로그래밍 - 1</title>
      <link>https://bsch0111.github.io/post/python_oop/</link>
      <pubDate>Thu, 03 Dec 2020 00:43:40 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/python_oop/</guid>
      <description>PYTHON과 객체지향프로그래밍 객체지향 프로그램? 위키백과
 여러 개의 독립된 단위, 즉 &amp;ldquo;객체&amp;quot;들의 모임으로 파악하고자 하는 것이다.</description>
    </item>
    
    <item>
      <title>고양이 기생충</title>
      <link>https://bsch0111.github.io/post/dirofilaria_immitis/</link>
      <pubDate>Tue, 01 Dec 2020 01:18:55 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/dirofilaria_immitis/</guid>
      <description>고양이 기생충 1 종류  내부기생충 : 몸 안에 기생하는 벌레  심장사상충, 회충, 촌충, 십이지장충 등   외부기생충 : 몸 밖에서 기생하는 벼룩, 진드기, 귀진드기, 이 일반적으로 실내에 사는 고양이는 심장사상충 예방약으로 다른 내부 기생충까지 함께 구제하는 방법 선택  심장사상충 일상에서 모기를 통해 감염될 수 있는 병</description>
    </item>
    
    <item>
      <title>Emoji Support</title>
      <link>https://bsch0111.github.io/post/emoji-support/</link>
      <pubDate>Sat, 28 Nov 2020 02:36:00 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/emoji-support/</guid>
      <description>&lt;p&gt;Emoji can be enabled in a Hugo project in a number of ways.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Math Typesetting</title>
      <link>https://bsch0111.github.io/post/math-typesetting/</link>
      <pubDate>Sat, 28 Nov 2020 02:35:27 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/math-typesetting/</guid>
      <description>&lt;p&gt;Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Placeholder Text</title>
      <link>https://bsch0111.github.io/post/placeholder-text/</link>
      <pubDate>Sat, 28 Nov 2020 02:34:42 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/placeholder-text/</guid>
      <description>&lt;p&gt;Lorem est tota propiore conpellat pectoribus de pectora summo.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rich Content</title>
      <link>https://bsch0111.github.io/post/rich-content/</link>
      <pubDate>Sat, 28 Nov 2020 02:33:08 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/rich-content/</guid>
      <description>&lt;p&gt;Hugo ships with several &lt;a href=&#34;https://gohugo.io/content-management/shortcodes/#use-hugos-built-in-shortcodes&#34;&gt;Built-in Shortcodes&lt;/a&gt; for rich content, along with a &lt;a href=&#34;https://gohugo.io/about/hugo-and-gdpr/&#34;&gt;Privacy Config&lt;/a&gt; and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Test</title>
      <link>https://bsch0111.github.io/post/test/</link>
      <pubDate>Sat, 28 Nov 2020 02:13:04 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/test/</guid>
      <description>&lt;p&gt;This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
