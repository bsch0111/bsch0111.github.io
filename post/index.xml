<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on </title>
    <link>https://bsch0111.github.io/post/</link>
    <description>Recent content in Posts on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Mon, 07 Dec 2020 00:14:34 +0900</lastBuildDate><atom:link href="https://bsch0111.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>breakpoint 로 디버깅하기</title>
      <link>https://bsch0111.github.io/post/python-dubuggin/</link>
      <pubDate>Mon, 07 Dec 2020 00:14:34 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/python-dubuggin/</guid>
      <description>breakpoint 로 디버깅하기  참고 : https://www.askpython.com/python/built-in-methods/python-breakpoint-function 디버깅(debugging)은 프로그램이 정상 작동할 수 있도록 잠재적 ‘버그’를 제고하는 행위 파이썬에서는 pdb라는 파이썬 표준 라이브러리 모듈을 사용함 예시  import pdb a = None for i in range(10) : if i == 4 : a = &amp;#39;Hi&amp;#39; print(&amp;#39;a is set to&amp;#39;, a ) elif i == 5: pdb.</description>
    </item>
    
    <item>
      <title>Python package란</title>
      <link>https://bsch0111.github.io/post/python_package/</link>
      <pubDate>Sun, 06 Dec 2020 15:14:50 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/python_package/</guid>
      <description>Python Package란  참고 : https://docs.python.org/3/tutorial/modules.html#packages “dotted module names”을 이용해서 Python의 모듈을 구조화하는 방법 예를 들어 A.</description>
    </item>
    
    <item>
      <title>test_pypl에 패키지 배포하기</title>
      <link>https://bsch0111.github.io/post/deploy_python_to_test_pypl/</link>
      <pubDate>Sun, 06 Dec 2020 15:12:00 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/deploy_python_to_test_pypl/</guid>
      <description>2020/12/05 5. test pypl 에 패키지 배포
test pypl 에 패키지 배포 과정  PyPI : Python Package Index (PyPI) 1 우선 package 를 만들고, 배포가 가능하도록 README.</description>
    </item>
    
    <item>
      <title> __main__ : python 모듈 호출 시 전역에 선언된 함수 수행 문제해결방법</title>
      <link>https://bsch0111.github.io/post/python_global/</link>
      <pubDate>Sun, 06 Dec 2020 03:08:28 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/python_global/</guid>
      <description>python 모듈 호출 시 전역에 선언된 함수 실행 python 모듈을 호출 했을 때 전역으로 선언되어 있는 함수, 및 변수를 수행한다.</description>
    </item>
    
    <item>
      <title>hugo anatole 테마 만지기</title>
      <link>https://bsch0111.github.io/post/blog_tab_resize/</link>
      <pubDate>Sat, 05 Dec 2020 01:47:19 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/blog_tab_resize/</guid>
      <description>hugo anatole 테마 만지기  hugo anatole 테마 기본은 옆의 탭이 너무 길다.</description>
    </item>
    
    <item>
      <title>부모 레포지토리와 submodule 레포지토리의 포인트가 달라서 생기는 문제</title>
      <link>https://bsch0111.github.io/post/branch_detach/</link>
      <pubDate>Sat, 05 Dec 2020 01:28:20 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/branch_detach/</guid>
      <description>부모 레포지토리와 submodule 레포지토리의 포인트가 달라서 생기는 문제  git log 커밋 포인터 중에서 HEAD 와 origin/main 이 다른 것을 확인할 수 있다  commit 81e8e894f15f76aa85ba72846f125b33007c7a30 (HEAD) Author: bsch0111 &amp;lt;bsch0111@naver.</description>
    </item>
    
    <item>
      <title>Clone 할 레포지토리가 submodule을 포함하고 있을 떄</title>
      <link>https://bsch0111.github.io/post/problem-when-repository-has-submodule/</link>
      <pubDate>Fri, 04 Dec 2020 23:55:06 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/problem-when-repository-has-submodule/</guid>
      <description>Clone 할 레포지토리가 submodule을 포함하고 있을 떄 문제점  이전에 로컬 저장소에서 push 할 때 하나의 저장소 밑에 하나의 저장소가 submodule로 되어 있음  궁금증  다시 클론해서 가져올 때 submodule 이 지정되어 있는가?</description>
    </item>
    
    <item>
      <title>Github</title>
      <link>https://bsch0111.github.io/post/github/</link>
      <pubDate>Fri, 04 Dec 2020 14:05:11 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/github/</guid>
      <description>GIT에 대한 궁금증  Github와 Git의 차이 &amp;amp; .git 폴더가 어떤 일을 하는지  git의 발전방향</description>
    </item>
    
    <item>
      <title>초기 맥북 개발환경 구성</title>
      <link>https://bsch0111.github.io/post/development-setting/</link>
      <pubDate>Fri, 04 Dec 2020 01:14:14 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/development-setting/</guid>
      <description>초기 맥북 개발환경 구성  언어 : Python 쉘 : Fish Shell Python 가상환경 : anaconda 패키지 설치 프로그램 :brew, cask 에디터 : vscose 터미널 : iterm2  쉘 Fish Shell &amp;ldquo;I hate configuration, and combing hundreds of git repos for bashfiles and find what works for me&amp;rdquo; : 참고한 블로그 글</description>
    </item>
    
    <item>
      <title>PYTHON과 객체지향프로그래밍 - 1</title>
      <link>https://bsch0111.github.io/post/python_oop/</link>
      <pubDate>Thu, 03 Dec 2020 00:43:40 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/python_oop/</guid>
      <description>PYTHON과 객체지향프로그래밍 객체지향 프로그램? 위키백과
 여러 개의 독립된 단위, 즉 &amp;ldquo;객체&amp;quot;들의 모임으로 파악하고자 하는 것이다.</description>
    </item>
    
    <item>
      <title>고양이 기생충</title>
      <link>https://bsch0111.github.io/post/dirofilaria_immitis/</link>
      <pubDate>Tue, 01 Dec 2020 01:18:55 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/dirofilaria_immitis/</guid>
      <description>고양이 기생충 1 종류  내부기생충 : 몸 안에 기생하는 벌레  심장사상충, 회충, 촌충, 십이지장충 등   외부기생충 : 몸 밖에서 기생하는 벼룩, 진드기, 귀진드기, 이 일반적으로 실내에 사는 고양이는 심장사상충 예방약으로 다른 내부 기생충까지 함께 구제하는 방법 선택  심장사상충 일상에서 모기를 통해 감염될 수 있는 병</description>
    </item>
    
    <item>
      <title>Emoji Support</title>
      <link>https://bsch0111.github.io/post/emoji-support/</link>
      <pubDate>Sat, 28 Nov 2020 02:36:00 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/emoji-support/</guid>
      <description>&lt;p&gt;Emoji can be enabled in a Hugo project in a number of ways.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Math Typesetting</title>
      <link>https://bsch0111.github.io/post/math-typesetting/</link>
      <pubDate>Sat, 28 Nov 2020 02:35:27 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/math-typesetting/</guid>
      <description>&lt;p&gt;Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Placeholder Text</title>
      <link>https://bsch0111.github.io/post/placeholder-text/</link>
      <pubDate>Sat, 28 Nov 2020 02:34:42 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/placeholder-text/</guid>
      <description>&lt;p&gt;Lorem est tota propiore conpellat pectoribus de pectora summo.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rich Content</title>
      <link>https://bsch0111.github.io/post/rich-content/</link>
      <pubDate>Sat, 28 Nov 2020 02:33:08 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/rich-content/</guid>
      <description>&lt;p&gt;Hugo ships with several &lt;a href=&#34;https://gohugo.io/content-management/shortcodes/#use-hugos-built-in-shortcodes&#34;&gt;Built-in Shortcodes&lt;/a&gt; for rich content, along with a &lt;a href=&#34;https://gohugo.io/about/hugo-and-gdpr/&#34;&gt;Privacy Config&lt;/a&gt; and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Test</title>
      <link>https://bsch0111.github.io/post/test/</link>
      <pubDate>Sat, 28 Nov 2020 02:13:04 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/test/</guid>
      <description>&lt;p&gt;This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
