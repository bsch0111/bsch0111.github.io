<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on </title>
    <link>https://bsch0111.github.io/tags/python/</link>
    <description>Recent content in python on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Mon, 07 Dec 2020 00:14:34 +0900</lastBuildDate><atom:link href="https://bsch0111.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>breakpoint 로 디버깅하기</title>
      <link>https://bsch0111.github.io/post/python-dubuggin/</link>
      <pubDate>Mon, 07 Dec 2020 00:14:34 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/python-dubuggin/</guid>
      <description>breakpoint 로 디버깅하기  참고 : https://www.askpython.com/python/built-in-methods/python-breakpoint-function 디버깅(debugging)은 프로그램이 정상 작동할 수 있도록 잠재적 ‘버그’를 제고하는 행위 파이썬에서는 pdb라는 파이썬 표준 라이브러리 모듈을 사용함 예시  import pdb a = None for i in range(10) : if i == 4 : a = &amp;#39;Hi&amp;#39; print(&amp;#39;a is set to&amp;#39;, a ) elif i == 5: pdb.</description>
    </item>
    
    <item>
      <title>Python package란</title>
      <link>https://bsch0111.github.io/post/python_package/</link>
      <pubDate>Sun, 06 Dec 2020 15:14:50 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/python_package/</guid>
      <description>Python Package란  참고 : https://docs.python.org/3/tutorial/modules.html#packages “dotted module names”을 이용해서 Python의 모듈을 구조화하는 방법 예를 들어 A.</description>
    </item>
    
    <item>
      <title>test_pypl에 패키지 배포하기</title>
      <link>https://bsch0111.github.io/post/deploy_python_to_test_pypl/</link>
      <pubDate>Sun, 06 Dec 2020 15:12:00 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/deploy_python_to_test_pypl/</guid>
      <description>2020/12/05 5. test pypl 에 패키지 배포
test pypl 에 패키지 배포 과정  PyPI : Python Package Index (PyPI) 1 우선 package 를 만들고, 배포가 가능하도록 README.</description>
    </item>
    
    <item>
      <title> __main__ : python 모듈 호출 시 전역에 선언된 함수 수행 문제해결방법</title>
      <link>https://bsch0111.github.io/post/python_global/</link>
      <pubDate>Sun, 06 Dec 2020 03:08:28 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/python_global/</guid>
      <description>python 모듈 호출 시 전역에 선언된 함수 실행 python 모듈을 호출 했을 때 전역으로 선언되어 있는 함수, 및 변수를 수행한다.</description>
    </item>
    
    <item>
      <title>PYTHON과 객체지향프로그래밍 - 1</title>
      <link>https://bsch0111.github.io/post/python_oop/</link>
      <pubDate>Thu, 03 Dec 2020 00:43:40 +0900</pubDate>
      
      <guid>https://bsch0111.github.io/post/python_oop/</guid>
      <description>PYTHON과 객체지향프로그래밍 객체지향 프로그램? 위키백과
 여러 개의 독립된 단위, 즉 &amp;ldquo;객체&amp;quot;들의 모임으로 파악하고자 하는 것이다.</description>
    </item>
    
  </channel>
</rss>
